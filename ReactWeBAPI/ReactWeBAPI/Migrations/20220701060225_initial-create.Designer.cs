// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReactWeBAPI.CommonLayer.Model;

namespace ReactWeBAPI.Migrations
{
    [DbContext(typeof(CategoryContext))]
    [Migration("20220701060225_initial-create")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReactWeBAPI.CommonLayer.Model.Category", b =>
                {
                    b.Property<int>("cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cname")
                        .HasColumnType("varchar(60)");

                    b.HasKey("cid");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ReactWeBAPI.CommonLayer.Model.Product", b =>
                {
                    b.Property<int>("pid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categorycid")
                        .HasColumnType("int");

                    b.Property<int>("actualcost")
                        .HasColumnType("int");

                    b.Property<string>("pimage")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("pname")
                        .HasColumnType("varchar(60)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("pid");

                    b.HasIndex("Categorycid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ReactWeBAPI.CommonLayer.Model.Product", b =>
                {
                    b.HasOne("ReactWeBAPI.CommonLayer.Model.Category", null)
                        .WithMany("Product")
                        .HasForeignKey("Categorycid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
